package Sites;

import java.awt.Color;
import java.awt.Toolkit;
import javax.swing.JOptionPane;

/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 *<pre>
 * Class        Add
 * File         Add.java
 * Description  A class used to add a new site
 * Date         10/31/2023
 * History Log
 * @author	    <i>wldeh</i>
 * @version 	  %1% %2%
 *</pre>
 *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
public class Add extends javax.swing.JDialog {

  // class instance variables
  private Site site = null;
  private boolean error = false;
  private String errorMessage = "";
  private final int MAX_POPULATION = 1000000;
  private final int MIN_POPULATION = 0;
  private final int MAX_AREA = 100000000;
  private String name;
  private String country;
  private float population;
  private String capital;
  private float area;
  private final Color white = Color.WHITE; // Default background color for input textfield
  private final Color pink = Color.PINK; // Background color for bad input textfield

  /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   *<pre>
   * Constructor  Add()--default constructor
   * Description  Create an instance of the GUI form and sets icon image.
   *              Used for Add Site.
   * Date         10/31/2023
   * History Log  7/18/2018, 5/7/2020
   * @author      <i>wldeh</i>
   *</pre>
   *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
  public Add() {
    initComponents();
    // Center the form
    this.setLocationRelativeTo(null);
    // Set the default button
    this.getRootPane().setDefaultButton(saveJButton);
    this.setIconImage(
        Toolkit.getDefaultToolkit().getImage("src/Images/worldFlags_small.gif")
      );
    nameJTextField.requestFocus();
    site = null;
    setAlwaysOnTop(true);
    setModal(true);
  }

  /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   *<pre>
   * Constructor  Add()--overloaded constructor
   * Description  Create an instance of the GUI form and sets icon image.
   *              Used for Edit Site.
   * Date         10/31/2023
   * History Log
   * @author      <i>wldeh</i>
   * @param       mySite Site
   *</pre>
   *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
  public Add(Site mySite) {
    this(); //call default constructor to build GUI
    this.site = mySite;
    nameJTextField.setText(mySite.getName());
    countryJTextField.setText(mySite.getCountry());
    populationJTextField.setText(String.valueOf(mySite.getPopulation()));
    capitalJTextField.setText(mySite.getCapital());
    areaJTextField.setText(String.valueOf(mySite.getArea()));
    titleJLabel.setText("Edit Site");
  }

  /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   *<pre>
   * Constructor  Add()--overloaded constructor
   * Description  Create an instance of the GUI form and sets icon image.
   *              Used for Edit Person.
   * Date         10/20/2023
   * History Log
   * @author      <i>wldeh</i>
   * @param       parent Frame
   * @param       modal  boolean
   *</pre>
   *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
  public Add(java.awt.Frame parent, boolean modal) {
    super(parent, modal);
    initComponents();
    // Center the form
    this.setLocationRelativeTo(null);
    // Set the default button
    this.getRootPane().setDefaultButton(saveJButton);
  }

  /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   *<pre>
   * Method:      getSite()
   * Description: Returns the site added or edited.
   * Date:        10/31/2023
   * @author      wldeh
   * @return      Site
   *</pre>
   *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
  public Site getSite() {
    return site;
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    titleJLabel = new javax.swing.JLabel();
    contentJPanel = new javax.swing.JPanel();
    nameJLabel = new javax.swing.JLabel();
    nameJTextField = new javax.swing.JTextField();
    countryJLabel = new javax.swing.JLabel();
    countryJTextField = new javax.swing.JTextField();
    populationJLabel = new javax.swing.JLabel();
    populationJTextField = new javax.swing.JTextField();
    capitalJLabel = new javax.swing.JLabel();
    capitalJTextField = new javax.swing.JTextField();
    areaJLabel = new javax.swing.JLabel();
    areaJTextField = new javax.swing.JTextField();
    controlJPanel = new javax.swing.JPanel();
    saveJButton = new javax.swing.JButton();
    cancelJButton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Employee Add Form");
    setType(java.awt.Window.Type.UTILITY);

    titleJLabel.setFont(new java.awt.Font("Tempus Sans ITC", 2, 30)); // NOI18N
    titleJLabel.setForeground(new java.awt.Color(0, 102, 102));
    titleJLabel.setIcon(
      new javax.swing.ImageIcon(
        getClass().getResource("/Images/worldFlags_small.GIF")
      )
    ); // NOI18N
    titleJLabel.setText("Add Vacation Site");
    titleJLabel.setToolTipText("");

    contentJPanel.setLayout(new java.awt.GridLayout(5, 2, 2, 2));

    nameJLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    nameJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    nameJLabel.setText("Name of Site: \n");
    contentJPanel.add(nameJLabel);

    nameJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    contentJPanel.add(nameJTextField);

    countryJLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    countryJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    countryJLabel.setText("Country:\n\n ");
    contentJPanel.add(countryJLabel);

    countryJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    contentJPanel.add(countryJTextField);

    populationJLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    populationJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    populationJLabel.setText("Population: ");
    contentJPanel.add(populationJLabel);

    populationJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    contentJPanel.add(populationJTextField);

    capitalJLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    capitalJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    capitalJLabel.setText("Capital: ");
    contentJPanel.add(capitalJLabel);

    capitalJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    contentJPanel.add(capitalJTextField);

    areaJLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    areaJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    areaJLabel.setText("Area: ");
    contentJPanel.add(areaJLabel);

    areaJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    contentJPanel.add(areaJTextField);

    controlJPanel.setLayout(new java.awt.GridLayout(1, 2, 3, 6));

    saveJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    saveJButton.setMnemonic('S');
    saveJButton.setText("Save");
    saveJButton.setToolTipText("Click to submit your answer");
    saveJButton.addActionListener(
      new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
          saveJButtonActionPerformed(evt);
        }
      }
    );
    controlJPanel.add(saveJButton);

    cancelJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    cancelJButton.setMnemonic('n');
    cancelJButton.setText("Cancel");
    cancelJButton.setToolTipText("Play all over again!");
    cancelJButton.addActionListener(
      new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
          cancelJButtonActionPerformed(evt);
        }
      }
    );
    controlJPanel.add(cancelJButton);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
      getContentPane()
    );
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout
        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(
          layout
            .createSequentialGroup()
            .addGroup(
              layout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(
                  layout
                    .createSequentialGroup()
                    .addGap(15, 15, 15)
                    .addComponent(
                      controlJPanel,
                      javax.swing.GroupLayout.PREFERRED_SIZE,
                      504,
                      javax.swing.GroupLayout.PREFERRED_SIZE
                    )
                )
                .addGroup(
                  layout
                    .createParallelGroup(
                      javax.swing.GroupLayout.Alignment.TRAILING
                    )
                    .addGroup(
                      layout
                        .createSequentialGroup()
                        .addContainerGap()
                        .addComponent(
                          titleJLabel,
                          javax.swing.GroupLayout.PREFERRED_SIZE,
                          425,
                          javax.swing.GroupLayout.PREFERRED_SIZE
                        )
                    )
                    .addGroup(
                      javax.swing.GroupLayout.Alignment.LEADING,
                      layout
                        .createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(
                          contentJPanel,
                          javax.swing.GroupLayout.PREFERRED_SIZE,
                          476,
                          javax.swing.GroupLayout.PREFERRED_SIZE
                        )
                    )
                )
            )
            .addContainerGap(16, Short.MAX_VALUE)
        )
    );
    layout.setVerticalGroup(
      layout
        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(
          layout
            .createSequentialGroup()
            .addGap(29, 29, 29)
            .addComponent(titleJLabel)
            .addPreferredGap(
              javax.swing.LayoutStyle.ComponentPlacement.RELATED,
              80,
              Short.MAX_VALUE
            )
            .addComponent(
              contentJPanel,
              javax.swing.GroupLayout.PREFERRED_SIZE,
              297,
              javax.swing.GroupLayout.PREFERRED_SIZE
            )
            .addGap(18, 18, 18)
            .addComponent(
              controlJPanel,
              javax.swing.GroupLayout.PREFERRED_SIZE,
              56,
              javax.swing.GroupLayout.PREFERRED_SIZE
            )
            .addGap(17, 17, 17)
        )
    );

    pack();
  } // </editor-fold>//GEN-END:initComponents

  private void cancelJButtonActionPerformed(java.awt.event.ActionEvent evt) { //GEN-FIRST:event_cancelJButtonActionPerformed
    this.dispose();
  } //GEN-LAST:event_cancelJButtonActionPerformed

  private void saveJButtonActionPerformed(java.awt.event.ActionEvent evt) { //GEN-FIRST:event_saveJButtonActionPerformed
    String message = "Error!";
    try {
      name = nameJTextField.getText();
      if (!Validation.isLettersOnly(name)) {
        message = "Please enter a valid site name.";
        nameJTextField.requestFocus();
        throw new IllegalArgumentException();
      }

      country = countryJTextField.getText();
      if (!Validation.isLettersOnly(country)) {
        message = "Please enter a valid country for the site.";
        countryJTextField.requestFocus();
        throw new IllegalArgumentException();
      }

      if (!Validation.isLettersOnly(populationJTextField.getText())) {
        message = "Please enter a valid population for the site.";
        populationJTextField.requestFocus();
        throw new IllegalArgumentException();
      }
      population = Float.parseFloat(populationJTextField.getText());

      capital = capitalJTextField.getText();
      if (!Validation.isLettersOnly(capital)) {
        message = "Please enter a valid capital for the site.";
        capitalJTextField.requestFocus();
        throw new IllegalArgumentException();
      }

      if (!Validation.isLettersOnly(areaJTextField.getText())) {
        message = "Please enter a valid area for the site.";
        areaJTextField.requestFocus();
        throw new IllegalArgumentException();
      }
      area = Float.parseFloat(areaJTextField.getText());

      site = new Site(name, country, population, capital, area);
      this.dispose();
    } catch (IllegalArgumentException exp) {
      JOptionPane.showMessageDialog(
        null,
        message,
        "Invalid Input",
        JOptionPane.ERROR_MESSAGE
      );
    } catch (Exception exp) {
      throw new RuntimeException("Error reading input.");
    }
  } //GEN-LAST:event_saveJButtonActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel areaJLabel;
  private javax.swing.JTextField areaJTextField;
  private javax.swing.JButton cancelJButton;
  private javax.swing.JLabel capitalJLabel;
  private javax.swing.JTextField capitalJTextField;
  private javax.swing.JPanel contentJPanel;
  private javax.swing.JPanel controlJPanel;
  private javax.swing.JLabel countryJLabel;
  private javax.swing.JTextField countryJTextField;
  private javax.swing.JLabel nameJLabel;
  private javax.swing.JTextField nameJTextField;
  private javax.swing.JLabel populationJLabel;
  private javax.swing.JTextField populationJTextField;
  private javax.swing.JButton saveJButton;
  private javax.swing.JLabel titleJLabel;
  // End of variables declaration//GEN-END:variables
}
